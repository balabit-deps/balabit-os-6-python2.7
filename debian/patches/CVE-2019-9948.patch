Description: Disallow urllib file reading
Origin: other, https://github.com/python/cpython/pull/11842
Bug: https://bugs.python.org/issue35907

Index: python2.7-2.7.12/Lib/test/test_urllib.py
===================================================================
--- python2.7-2.7.12.orig/Lib/test/test_urllib.py	2019-04-11 07:27:38.652684298 -0400
+++ python2.7-2.7.12/Lib/test/test_urllib.py	2019-04-11 07:27:38.652684298 -0400
@@ -1002,6 +1002,18 @@ class URLopener_Tests(unittest.TestCase)
             "spam://c:|windows%/:=&?~#+!$,;'@()*[]|/path/"),
             "//c:|windows%/:=&?~#+!$,;'@()*[]|/path/")
 
+    def test_local_file_open(self):
+        class DummyURLopener(urllib.URLopener):
+            def open_local_file(self, url):
+                return url
+        self.assertEqual(DummyURLopener().open(
+            'local-file://example'), '//example')
+        self.assertEqual(DummyURLopener().open(
+            'local_file://example'), '//example')
+        self.assertRaises(IOError, urllib.urlopen,
+            'local-file://example')
+        self.assertRaises(IOError, urllib.urlopen,
+            'local_file://example')
 
 # Just commented them out.
 # Can't really tell why keep failing in windows and sparc.
Index: python2.7-2.7.12/Lib/urllib.py
===================================================================
--- python2.7-2.7.12.orig/Lib/urllib.py	2019-04-11 07:27:38.652684298 -0400
+++ python2.7-2.7.12/Lib/urllib.py	2019-04-11 07:27:38.652684298 -0400
@@ -203,7 +203,10 @@ class URLopener:
         name = 'open_' + urltype
         self.type = urltype
         name = name.replace('-', '_')
-        if not hasattr(self, name):
+        
+        # bpo-35907: # disallow the file reading with the type not allowed
+        if not hasattr(self, name) or \
+            (self == _urlopener and name == 'open_local_file'):
             if proxy:
                 return self.open_unknown_proxy(proxy, fullurl, data)
             else:
