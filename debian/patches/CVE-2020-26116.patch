Backported of:

From 8ca8a2e8fb068863c1138f07e3098478ef8be12e Mon Sep 17 00:00:00 2001
From: AMIR <31338382+amiremohamadi@users.noreply.github.com>
Date: Sun, 19 Jul 2020 00:46:10 +0430
Subject: [PATCH] bpo-39603: Prevent header injection in http methods
 (GH-18485)

reject control chars in http method in http.client.putrequest to prevent http header injection
diff --git a/Lib/httplib.py b/Lib/httplib.py
index 6b94550..a2c279c 100644
--- a/Lib/httplib.py
+++ b/Lib/httplib.py
@@ -257,6 +257,10 @@ _contains_disallowed_url_pchar_re = re.compile('[\x00-\x20\x7f-\xff]')
 #  _is_allowed_url_pchars_re = re.compile(r"^[/!$&'()*+,;=:@%a-zA-Z0-9._~-]+$")
 # We are more lenient for assumed real world compatibility purposes.
 
+# These characters are not allowed within HTTP method names
+# to prevent http header injection.
+_contains_disallowed_method_pchar_re = re.compile('[\x00-\x1f]')
+
 # We always set the Content-Length header for these methods because some
 # servers will otherwise respond with a 411
 _METHODS_EXPECTING_BODY = {'PATCH', 'POST', 'PUT'}
@@ -950,6 +954,8 @@ class HTTPConnection:
         else:
             raise CannotSendRequest()
 
+        self._validate_method(method)
+
         # Save the method we use, we need it later in the response phase
         self._method = method
         if not url:
@@ -1035,6 +1041,17 @@ class HTTPConnection:
             # For HTTP/1.0, the server will assume "not chunked"
             pass
 
+    def _validate_method(self, method):
+        """Validate a method name for putrequest."""
+        # prevent http header injection
+        match = _contains_disallowed_method_pchar_re.search(method)
+        if match:
+            msg = (
+                "method can't contain control characters. {method!r} "
+                "(found at least {match_group!r})"
+                ).format(method=method, match_group=match.group())
+            raise ValueError(msg)
+
     def _validate_host(self, host):
         """Validate a host so it doesn't contain control characters."""
         # Prevent CVE-2019-18348.
diff --git a/Lib/test/test_httplib.py b/Lib/test/test_httplib.py
index d3bac0f..02d7cbf 100644
--- a/Lib/test/test_httplib.py
+++ b/Lib/test/test_httplib.py
@@ -271,6 +271,28 @@ class HeaderTests(TestCase):
                 conn.putheader(name, value)
 
 
+class HttpMethodTests(TestCase):
+    def test_invalid_method_names(self):
+        methods = (
+            'GET\r',
+            'POST\n',
+            'PUT\n\r',
+            'POST\nValue',
+            'POST\nHOST:abc',
+            'GET\nrHost:abc\n',
+            'POST\rRemainder:\r',
+            'GET\rHOST:\n',
+            '\nPUT'
+        )
+
+        for method in methods:
+            with self.assertRaisesRegex(
+                    ValueError, "method can't contain control characters"):
+                conn = client.HTTPConnection('example.com')
+                conn.sock = FakeSocket(None)
+                conn.request(method=method, url="/")
+
+
 class BasicTest(TestCase):
     def test_status_lines(self):
         # Test HTTP status lines
